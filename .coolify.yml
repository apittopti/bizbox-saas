version: '3.8'

services:
  postgres:
    image: postgres:14
    environment:
      POSTGRES_DB: bizbox_db
      POSTGRES_USER: bizbox_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-securepassword123}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -h localhost -U bizbox_user"]
      interval: 5s
      timeout: 3s
      retries: 20
      start_period: 20s
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    restart: unless-stopped

  landing:
    build:
      context: ./apps/landing
      dockerfile: Dockerfile
    ports:
      - "3001:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://bizbox_user:${POSTGRES_PASSWORD:-securepassword123}@postgres:5432/bizbox_db
      - REDIS_URL=redis://redis:6379
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET:-your-nextauth-secret-key}
      - NEXTAUTH_URL=${NEXTAUTH_URL:-http://194.164.89.92:3001}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  admin:
    build:
      context: ./apps/admin
      dockerfile: Dockerfile
    ports:
      - "3002:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://bizbox_user:${POSTGRES_PASSWORD:-securepassword123}@postgres:5432/bizbox_db
      - REDIS_URL=redis://redis:6379
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET:-your-nextauth-secret-key}
      - NEXTAUTH_URL=${NEXTAUTH_URL:-http://194.164.89.92:3002}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  builder:
    build:
      context: ./apps/builder
      dockerfile: Dockerfile
    ports:
      - "3003:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://bizbox_user:${POSTGRES_PASSWORD:-securepassword123}@postgres:5432/bizbox_db
      - REDIS_URL=redis://redis:6379
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET:-your-nextauth-secret-key}
      - NEXTAUTH_URL=${NEXTAUTH_URL:-http://194.164.89.92:3003}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  customer:
    build:
      context: ./apps/customer
      dockerfile: Dockerfile
    ports:
      - "3004:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://bizbox_user:${POSTGRES_PASSWORD:-securepassword123}@postgres:5432/bizbox_db
      - REDIS_URL=redis://redis:6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  tenant:
    build:
      context: ./apps/tenant
      dockerfile: Dockerfile
    ports:
      - "3005:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://bizbox_user:${POSTGRES_PASSWORD:-securepassword123}@postgres:5432/bizbox_db
      - REDIS_URL=redis://redis:6379
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET:-your-nextauth-secret-key}
      - NEXTAUTH_URL=${NEXTAUTH_URL:-http://194.164.89.92:3005}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  super-admin:
    build:
      context: ./apps/super-admin
      dockerfile: Dockerfile
    ports:
      - "3006:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://bizbox_user:${POSTGRES_PASSWORD:-securepassword123}@postgres:5432/bizbox_db
      - REDIS_URL=redis://redis:6379
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET:-your-nextauth-secret-key}
      - NEXTAUTH_URL=${NEXTAUTH_URL:-http://194.164.89.92:3006}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data: