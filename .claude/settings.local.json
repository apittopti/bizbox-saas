{
  "permissions": {
    "allow": [
      "mcp__sequential-thinking__sequentialthinking",
      "mcp__context7__resolve-library-id",
      "mcp__context7__get-library-docs",
      "Bash(cat:*)",
      "Bash(chmod:*)",
      "Bash(deploy-to-coolify.bat)",
      "Bash(./deploy-to-coolify.sh)",
      "WebFetch(domain:coolify.io)",
      "Bash(./api-deploy.sh:*)",
      "Bash(./api-deploy-simple.sh:*)",
      "Bash(powershell:*)",
      "Bash(curl:*)",
      "Bash(git add:*)",
      "Bash(gh repo create:*)",
      "mcp__playwright__browser_navigate",
      "Bash(python3:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "Bash(npm install:*)",
      "Bash(pnpm install:*)",
      "Bash(find:*)",
      "Bash(for app in admin builder customer tenant super-admin)",
      "Bash(do)",
      "Bash(done)",
      "Bash(sed:*)",
      "Bash(git checkout:*)",
      "Bash(do cp apps/landing/Dockerfile apps/$app/Dockerfile)",
      "Bash(scripts/docker-build.sh:*)",
      "Bash(./deploy.sh)",
      "WebFetch(domain:pnpm.io)",
      "Bash(for app in builder customer landing super-admin tenant)",
      "Bash(do cp apps/admin/Dockerfile apps/$app/Dockerfile)",
      "Bash(for app in admin builder customer landing super-admin)",
      "Bash(do sed -i 's/--from=builder/--from=build/g' apps/$app/Dockerfile)",
      "Bash(for app in admin builder customer landing super-admin tenant)",
      "Bash(do sed -i 's/pnpm install --frozen-lockfile/pnpm install/g' apps/$app/Dockerfile)",
      "Bash(for app in builder customer landing tenant)"
    ],
    "deny": [],
    "ask": []
  }
}