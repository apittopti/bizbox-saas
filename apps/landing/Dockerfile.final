FROM node:20-alpine AS base

WORKDIR /app

# Install basic dependencies for node-gyp
RUN apk add --no-cache libc6-compat python3 make g++

# Copy package files and install dependencies
COPY apps/landing/package.json ./
COPY apps/landing/tsconfig.json ./
COPY apps/landing/next.config.* ./
COPY apps/landing/tailwind.config.* ./
COPY apps/landing/postcss.config.* ./

# Install dependencies with npm (avoiding workspace complexity)
RUN npm install --legacy-peer-deps

# Copy source code
COPY apps/landing/src ./src
COPY apps/landing/public ./public

# Build the application
RUN npm run build

# Production image
FROM node:20-alpine AS runner
WORKDIR /app

ENV NODE_ENV=production

RUN addgroup --system --gid 1001 nodejs && \
    adduser --system --uid 1001 nextjs

# Copy built application
COPY --from=base --chown=nextjs:nodejs /app/.next/standalone ./
COPY --from=base --chown=nextjs:nodejs /app/.next/static ./.next/static
COPY --from=base --chown=nextjs:nodejs /app/public ./public

USER nextjs
EXPOSE 3000
ENV PORT=3000 HOSTNAME="0.0.0.0"

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
  CMD wget --no-verbose --tries=1 --spider http://localhost:3000/api/health || exit 1

CMD ["node", "server.js"]