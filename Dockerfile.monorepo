# Multi-stage Dockerfile for BizBox pnpm monorepo
# This builds all workspace dependencies and prepares them for individual app builds

FROM node:20-alpine AS base
# Install system dependencies for native modules
RUN apk add --no-cache libc6-compat python3 make g++
# Install pnpm globally
RUN corepack enable && corepack prepare pnpm@8.0.0 --activate
WORKDIR /app

# Copy package manager files
COPY package.json pnpm-workspace.yaml pnpm-lock.yaml ./
# Copy all workspace package.json files for dependency resolution
COPY packages/*/package.json ./packages/*/
COPY packages/*/*/package.json ./packages/*/*/
COPY apps/*/package.json ./apps/*/

# Install all dependencies using pnpm with workspace support
FROM base AS deps
RUN --mount=type=cache,id=pnpm,target=/root/.local/share/pnpm/store \
    pnpm install --frozen-lockfile --prefer-offline

# Build stage - copy source code and build all packages
FROM deps AS build
# Copy all source code
COPY . .
# Copy Turbo and TypeScript configs
COPY turbo.json tsconfig.json ./

# Build all packages in dependency order using Turbo
RUN pnpm turbo build --filter=@bizbox/shared-*
RUN pnpm turbo build --filter=@bizbox/core-*
RUN pnpm turbo build --filter=@bizbox/plugin-*

# This stage creates the built monorepo that individual apps can use
FROM node:20-alpine AS monorepo-built
RUN apk add --no-cache libc6-compat
RUN corepack enable && corepack prepare pnpm@8.0.0 --activate
WORKDIR /app
COPY --from=build /app .

# Individual app build stages
FROM monorepo-built AS app-landing
WORKDIR /app/apps/landing
RUN pnpm build

FROM monorepo-built AS app-admin
WORKDIR /app/apps/admin
RUN pnpm build

FROM monorepo-built AS app-builder
WORKDIR /app/apps/builder
RUN pnpm build

FROM monorepo-built AS app-customer
WORKDIR /app/apps/customer
RUN pnpm build

FROM monorepo-built AS app-tenant
WORKDIR /app/apps/tenant
RUN pnpm build

FROM monorepo-built AS app-super-admin
WORKDIR /app/apps/super-admin
RUN pnpm build