# Production Dockerfile template for individual BizBox apps
# This should be customized per app by replacing APP_NAME

# Build stage using the monorepo builder
FROM node:20-alpine AS base
RUN apk add --no-cache libc6-compat python3 make g++
RUN corepack enable && corepack prepare pnpm@8.0.0 --activate
WORKDIR /app

# Copy workspace configuration
FROM base AS workspace-deps
COPY package.json pnpm-workspace.yaml pnpm-lock.yaml ./
COPY packages/*/package.json ./packages/*/
COPY packages/*/*/package.json ./packages/*/*/
COPY apps/APP_NAME/package.json ./apps/APP_NAME/

# Install dependencies
RUN --mount=type=cache,id=pnpm,target=/root/.local/share/pnpm/store \
    pnpm install --frozen-lockfile --prefer-offline

# Build all dependencies
FROM workspace-deps AS workspace-build
COPY . .
COPY turbo.json tsconfig.json ./

# Build workspace packages in correct order
RUN pnpm turbo build --filter=@bizbox/shared-* --filter=@bizbox/core-* --filter=@bizbox/plugin-*

# Build the specific app
FROM workspace-build AS app-build
WORKDIR /app/apps/APP_NAME
RUN pnpm build

# Production runtime
FROM node:20-alpine AS runner
WORKDIR /app

ENV NODE_ENV=production
ENV NEXT_TELEMETRY_DISABLED=1

RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs

# Copy built application
COPY --from=app-build --chown=nextjs:nodejs /app/apps/APP_NAME/.next/standalone ./
COPY --from=app-build --chown=nextjs:nodejs /app/apps/APP_NAME/.next/static ./apps/APP_NAME/.next/static
COPY --from=app-build --chown=nextjs:nodejs /app/apps/APP_NAME/public ./apps/APP_NAME/public

USER nextjs

EXPOSE 3000
ENV PORT=3000
ENV HOSTNAME="0.0.0.0"

CMD ["node", "apps/APP_NAME/server.js"]