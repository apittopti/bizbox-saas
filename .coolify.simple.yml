# BizBox Multi-Tenant SaaS Platform
# Docker Compose for Coolify Deployment

version: '3.8'

services:
  # Database Service
  postgres:
    image: postgres:16-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME:-bizbox}
      POSTGRES_USER: ${DB_USER:-bizbox}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - bizbox-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-bizbox} -d ${DB_NAME:-bizbox}"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    labels:
      - "coolify.managed=true"
      - "coolify.type=database"
      - "coolify.name=bizbox-postgres"

  # Redis for Caching and Sessions
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    networks:
      - bizbox-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    labels:
      - "coolify.managed=true"
      - "coolify.type=cache"
      - "coolify.name=bizbox-redis"


  # Landing Page Application
  landing:
    build:
      context: .
      dockerfile: apps/landing/Dockerfile.prod
      network: host
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://${DB_USER:-bizbox}:${DB_PASSWORD}@postgres:5432/${DB_NAME:-bizbox}
      REDIS_URL: redis://default:${REDIS_PASSWORD}@redis:6379
      NEXTAUTH_URL: ${NEXTAUTH_URL}
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY}
      STRIPE_PUBLISHABLE_KEY: ${STRIPE_PUBLISHABLE_KEY}
      STRIPE_WEBHOOK_SECRET: ${STRIPE_WEBHOOK_SECRET}
    ports:
      - "3001:3000"
    networks:
      - bizbox-network
    labels:
      - "coolify.managed=true"
      - "coolify.type=application"
      - "coolify.name=bizbox-landing"

  # Admin Application
  admin:
    build:
      context: .
      dockerfile: apps/admin/Dockerfile
      network: host
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://${DB_USER:-bizbox}:${DB_PASSWORD}@postgres:5432/${DB_NAME:-bizbox}
      REDIS_URL: redis://default:${REDIS_PASSWORD}@redis:6379
      NEXTAUTH_URL: ${ADMIN_NEXTAUTH_URL}
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
      ADMIN_EMAIL: ${ADMIN_EMAIL}
    ports:
      - "3002:3000"
    networks:
      - bizbox-network
    labels:
      - "coolify.managed=true"
      - "coolify.type=application"
      - "coolify.name=bizbox-admin"

  # Builder Application
  builder:
    build:
      context: .
      dockerfile: apps/builder/Dockerfile
      network: host
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://${DB_USER:-bizbox}:${DB_PASSWORD}@postgres:5432/${DB_NAME:-bizbox}
      REDIS_URL: redis://default:${REDIS_PASSWORD}@redis:6379
      NEXTAUTH_URL: ${BUILDER_NEXTAUTH_URL}
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
    ports:
      - "3003:3000"
    networks:
      - bizbox-network
    labels:
      - "coolify.managed=true"
      - "coolify.type=application"
      - "coolify.name=bizbox-builder"

  # Customer Application (Multi-tenant)
  customer:
    build:
      context: .
      dockerfile: apps/customer/Dockerfile
      network: host
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://${DB_USER:-bizbox}:${DB_PASSWORD}@postgres:5432/${DB_NAME:-bizbox}
      REDIS_URL: redis://default:${REDIS_PASSWORD}@redis:6379
      NEXTAUTH_URL: ${CUSTOMER_NEXTAUTH_URL}
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
    ports:
      - "3004:3000"
    networks:
      - bizbox-network
    labels:
      - "coolify.managed=true"
      - "coolify.type=application"
      - "coolify.name=bizbox-customer"

  # Tenant Application (Customer websites)
  tenant:
    build:
      context: .
      dockerfile: apps/tenant/Dockerfile
      network: host
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://${DB_USER:-bizbox}:${DB_PASSWORD}@postgres:5432/${DB_NAME:-bizbox}
      REDIS_URL: redis://default:${REDIS_PASSWORD}@redis:6379
      TENANT_MODE: multi
    ports:
      - "3005:3000"
    networks:
      - bizbox-network
    labels:
      - "coolify.managed=true"
      - "coolify.type=application"
      - "coolify.name=bizbox-tenant"

  # Super Admin Application
  super-admin:
    build:
      context: .
      dockerfile: apps/super-admin/Dockerfile
      network: host
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://${DB_USER:-bizbox}:${DB_PASSWORD}@postgres:5432/${DB_NAME:-bizbox}
      REDIS_URL: redis://default:${REDIS_PASSWORD}@redis:6379
      NEXTAUTH_URL: ${SUPER_ADMIN_NEXTAUTH_URL}
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
      SUPER_ADMIN_PASSWORD: ${SUPER_ADMIN_PASSWORD}
      ADMIN_EMAIL: ${SUPER_ADMIN_EMAIL}
    ports:
      - "3006:3000"
    networks:
      - bizbox-network
    labels:
      - "coolify.managed=true"
      - "coolify.type=application"
      - "coolify.name=bizbox-super-admin"

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  bizbox-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16